<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="tmp102__sensor_8c" kind="file" language="C++">
    <compoundname>tmp102_sensor.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="my__i2c_8h" local="yes">my_i2c.h</includes>
    <includes refid="tmp102__sensor_8h" local="yes">tmp102_sensor.h</includes>
    <incdepgraph>
      <node id="954">
        <label>my_i2c.h</label>
        <link refid="my__i2c_8h"/>
        <childnode refid="955" relation="include">
        </childnode>
        <childnode refid="956" relation="include">
        </childnode>
      </node>
      <node id="957">
        <label>tmp102_sensor.h</label>
        <link refid="tmp102__sensor_8h"/>
      </node>
      <node id="956">
        <label>mraa/i2c.h</label>
      </node>
      <node id="955">
        <label>pthread.h</label>
      </node>
      <node id="953">
        <label>string.h</label>
      </node>
      <node id="952">
        <label>/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c</label>
        <link refid="tmp102_sensor.c"/>
        <childnode refid="953" relation="include">
        </childnode>
        <childnode refid="954" relation="include">
        </childnode>
        <childnode refid="957" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="tmp102__sensor_8c_1ae8c25eda33c17bf746db7b91fe54c85c" prot="public" static="no" mutable="no">
        <type>const <ref refid="structTMP102__CONFIG__REG__SETTINGS__T" kindref="compound">TMP102_CONFIG_REG_SETTINGS_T</ref></type>
        <definition>const TMP102_CONFIG_REG_SETTINGS_T TMP102_CONFIG_DEFAULT</definition>
        <argsstring></argsstring>
        <name>TMP102_CONFIG_DEFAULT</name>
        <initializer>= 
{
    .SD_MODE = 0,
    .TM_MODE = 0,
    .POL     = 0,
    .OS      = 0,
    .EM_MODE = 0,
    .CR      = 2
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temp</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="13" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="tmp102__sensor_8c_1a4725fb3e4cf18de4220d6067a7dc5dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setmode_allDefault</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setmode_allDefault</name>
        <briefdescription>
<para>Brings back to default. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="23" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="23" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1afeb776e895762c8f18a6289c1bf7daf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode</definition>
        <argsstring>(TMP102_CONFIG_REG_SETTINGS_T config)</argsstring>
        <name>TMP102_setMode</name>
        <param>
          <type><ref refid="structTMP102__CONFIG__REG__SETTINGS__T" kindref="compound">TMP102_CONFIG_REG_SETTINGS_T</ref></type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="36" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a7d4d57387ef6a5db5bfc8d14a94d9ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_SD_PowerSaving</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_SD_PowerSaving</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="43" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="43" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a4309a30e9d006753c2cdd6f6c9af2650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_SD_Continuous_default</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_SD_Continuous_default</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="59" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="59" bodyend="73"/>
        <referencedby refid="tmp102__sensor_8h_1a4725fb3e4cf18de4220d6067a7dc5dd4" compoundref="tmp102__sensor_8c" startline="23" endline="35">TMP102_setmode_allDefault</referencedby>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a81c75dba63b6c0727ab602ea631b3a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_TM_ComparatorMode_default</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_TM_ComparatorMode_default</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="75" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="75" bodyend="90"/>
        <referencedby refid="tmp102__sensor_8h_1a4725fb3e4cf18de4220d6067a7dc5dd4" compoundref="tmp102__sensor_8c" startline="23" endline="35">TMP102_setmode_allDefault</referencedby>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a4386703b35277dc71be5cd9b57d0f3ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_TM_InterruptMode</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_TM_InterruptMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="91" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="91" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a899854f020db34f588f89adffcdc8433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_ALERT_ActiveLow_default</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_ALERT_ActiveLow_default</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="107" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="107" bodyend="122"/>
        <referencedby refid="tmp102__sensor_8h_1a4725fb3e4cf18de4220d6067a7dc5dd4" compoundref="tmp102__sensor_8c" startline="23" endline="35">TMP102_setmode_allDefault</referencedby>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1aa7438de8c6766d48b649e132cabf88e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_ALERT_ActiveHigh</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_ALERT_ActiveHigh</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="123" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="123" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1aa96f470639b851a96f524ae6524dd266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_EM_NormalMode_default</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_EM_NormalMode_default</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="139" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="139" bodyend="155"/>
        <referencedby refid="tmp102__sensor_8h_1a4725fb3e4cf18de4220d6067a7dc5dd4" compoundref="tmp102__sensor_8c" startline="23" endline="35">TMP102_setmode_allDefault</referencedby>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a2df18183afad1339903fe59997aaf9a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_EM_ExtendedMode</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_EM_ExtendedMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="156" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="156" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a3f6277d742af4a10dcec568e84ad1d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_CR_250mHZ</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_CR_250mHZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="172" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="172" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a110d2f8672865d85670f2681e5dc9aed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_CR_1HZ</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_CR_1HZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="188" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="188" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a6d24a33a5e009441edb99bd1a727afec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_CR_4HZ_default</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_CR_4HZ_default</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="205" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="205" bodyend="221"/>
        <referencedby refid="tmp102__sensor_8h_1a4725fb3e4cf18de4220d6067a7dc5dd4" compoundref="tmp102__sensor_8c" startline="23" endline="35">TMP102_setmode_allDefault</referencedby>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a031c7291b177515876ebb29d24dc97b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_setMode_CR_8HZ</definition>
        <argsstring>()</argsstring>
        <name>TMP102_setMode_CR_8HZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="223" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="223" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a98961eafa743b9a651a3cd2f3787f858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_readMode_ALERT</definition>
        <argsstring>(uint8_t *al_bit)</argsstring>
        <name>TMP102_readMode_ALERT</name>
        <param>
          <type>uint8_t *</type>
          <declname>al_bit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>al_bit</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="239" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="239" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a6296f70167b1f662c7f9b56b15fe037c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_write_Tlow</definition>
        <argsstring>(float tlow_C)</argsstring>
        <name>TMP102_write_Tlow</name>
        <param>
          <type>float</type>
          <declname>tlow_C</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tlow_C</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="253" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="253" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a32a4b8bbc5611a7ca967cdaaeb732ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_write_Thigh</definition>
        <argsstring>(float thigh_C)</argsstring>
        <name>TMP102_write_Thigh</name>
        <param>
          <type>float</type>
          <declname>thigh_C</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thigh_C</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="290" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="290" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1aa8531a04dcf776f0d81d190b384bfab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_read_Tlow</definition>
        <argsstring>(float *tlow_C)</argsstring>
        <name>TMP102_read_Tlow</name>
        <param>
          <type>float *</type>
          <declname>tlow_C</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tlow_C</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="329" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="329" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a63bbac70f6558fd10f034a45d1fa140c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_read_Thigh</definition>
        <argsstring>(float *thigh_C)</argsstring>
        <name>TMP102_read_Thigh</name>
        <param>
          <type>float *</type>
          <declname>thigh_C</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>thigh_C</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="351" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="351" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a847d6333b56e33f815bb5e1101056e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TMP102_getTemp</definition>
        <argsstring>(float *temp, TEMPERATURE_UNIT_T unit)</argsstring>
        <name>TMP102_getTemp</name>
        <param>
          <type>float *</type>
          <declname>temp</declname>
        </param>
        <param>
          <type>TEMPERATURE_UNIT_T</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
<para>Gets the temperature value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>temp</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unit</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="374" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="374" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="tmp102__sensor_8c_1a1ea9cb5a6a2e798b33564f9142d7afa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t *</type>
        <definition>uint16_t* TMP102_memDump</definition>
        <argsstring>()</argsstring>
        <name>TMP102_memDump</name>
        <briefdescription>
<para>Gives a memdump of 4 len. <bold>IMP</bold> must free the address using return pointer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint8_t* </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" line="405" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c" bodystart="405" bodyend="423"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="my__i2c_8h" kindref="compound">my_i2c.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tmp102__sensor_8h" kindref="compound">tmp102_sensor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="tmp102__sensor_8h_1ae8c25eda33c17bf746db7b91fe54c85c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTMP102__CONFIG__REG__SETTINGS__T" kindref="compound">TMP102_CONFIG_REG_SETTINGS_T</ref><sp/><ref refid="tmp102__sensor_8h_1ae8c25eda33c17bf746db7b91fe54c85c" kindref="member">TMP102_CONFIG_DEFAULT</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structTMP102__CONFIG__REG__SETTINGS__T_1a81f77be9673afe30da33edb8e6e62b55" kindref="member">SD_MODE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>.TM_MODE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>.POL<sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>.OS<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>.EM_MODE<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>.CR<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="tmp102__sensor_8h_1a4725fb3e4cf18de4220d6067a7dc5dd4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a4725fb3e4cf18de4220d6067a7dc5dd4" kindref="member">TMP102_setmode_allDefault</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="tmp102__sensor_8h_1a6d24a33a5e009441edb99bd1a727afec" kindref="member">TMP102_setMode_CR_4HZ_default</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="tmp102__sensor_8h_1a4309a30e9d006753c2cdd6f6c9af2650" kindref="member">TMP102_setMode_SD_Continuous_default</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="tmp102__sensor_8h_1a899854f020db34f588f89adffcdc8433" kindref="member">TMP102_setMode_ALERT_ActiveLow_default</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="tmp102__sensor_8h_1a81c75dba63b6c0727ab602ea631b3a22" kindref="member">TMP102_setMode_TM_ComparatorMode_default</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="tmp102__sensor_8h_1aa96f470639b851a96f524ae6524dd266" kindref="member">TMP102_setMode_EM_NormalMode_default</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TMP102_setMode(<ref refid="structTMP102__CONFIG__REG__SETTINGS__T" kindref="compound">TMP102_CONFIG_REG_SETTINGS_T</ref><sp/>config)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,*((uint16_t*)&amp;config),<sp/>0);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="tmp102__sensor_8h_1a7d4d57387ef6a5db5bfc8d14a94d9ee4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a7d4d57387ef6a5db5bfc8d14a94d9ee4" kindref="member">TMP102_setMode_SD_PowerSaving</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>|=<sp/>(uint16_t)TMP102_CONFIG_SD;<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59" refid="tmp102__sensor_8h_1a4309a30e9d006753c2cdd6f6c9af2650" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a4309a30e9d006753c2cdd6f6c9af2650" kindref="member">TMP102_setMode_SD_Continuous_default</ref>()</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>&amp;=<sp/>~((uint16_t)TMP102_CONFIG_SD);<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="tmp102__sensor_8h_1a81c75dba63b6c0727ab602ea631b3a22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a81c75dba63b6c0727ab602ea631b3a22" kindref="member">TMP102_setMode_TM_ComparatorMode_default</ref>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>&amp;=<sp/>~((uint16_t)TMP102_CONFIG_TM);<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91" refid="tmp102__sensor_8h_1a4386703b35277dc71be5cd9b57d0f3ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a4386703b35277dc71be5cd9b57d0f3ce" kindref="member">TMP102_setMode_TM_InterruptMode</ref>()</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>|=<sp/>(uint16_t)TMP102_CONFIG_TM;<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107" refid="tmp102__sensor_8h_1a899854f020db34f588f89adffcdc8433" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a899854f020db34f588f89adffcdc8433" kindref="member">TMP102_setMode_ALERT_ActiveLow_default</ref>()</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>&amp;=<sp/>~((uint16_t)TMP102_CONFIG_POL);<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123" refid="tmp102__sensor_8h_1aa7438de8c6766d48b649e132cabf88e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1aa7438de8c6766d48b649e132cabf88e9" kindref="member">TMP102_setMode_ALERT_ActiveHigh</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>|=<sp/>(uint16_t)TMP102_CONFIG_POL;<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139" refid="tmp102__sensor_8h_1aa96f470639b851a96f524ae6524dd266" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1aa96f470639b851a96f524ae6524dd266" kindref="member">TMP102_setMode_EM_NormalMode_default</ref>()</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>&amp;=<sp/>~((uint16_t)TMP102_CONFIG_EM);<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156" refid="tmp102__sensor_8h_1a2df18183afad1339903fe59997aaf9a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a2df18183afad1339903fe59997aaf9a2" kindref="member">TMP102_setMode_EM_ExtendedMode</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>|=<sp/>(uint16_t)TMP102_CONFIG_EM;<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172" refid="tmp102__sensor_8h_1a3f6277d742af4a10dcec568e84ad1d5d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a3f6277d742af4a10dcec568e84ad1d5d" kindref="member">TMP102_setMode_CR_250mHZ</ref>()</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>&amp;=<sp/>~((uint16_t)TMP102_CONFIG_CR(3));<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188" refid="tmp102__sensor_8h_1a110d2f8672865d85670f2681e5dc9aed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a110d2f8672865d85670f2681e5dc9aed" kindref="member">TMP102_setMode_CR_1HZ</ref>()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>&amp;=<sp/>~((uint16_t)TMP102_CONFIG_CR(3));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>|=<sp/>((uint16_t)TMP102_CONFIG_CR(1));<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205" refid="tmp102__sensor_8h_1a6d24a33a5e009441edb99bd1a727afec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a6d24a33a5e009441edb99bd1a727afec" kindref="member">TMP102_setMode_CR_4HZ_default</ref>()</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>&amp;=<sp/>~((uint16_t)TMP102_CONFIG_CR(3));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>|=<sp/>((uint16_t)TMP102_CONFIG_CR(2));<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="tmp102__sensor_8h_1a031c7291b177515876ebb29d24dc97b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a031c7291b177515876ebb29d24dc97b4" kindref="member">TMP102_setMode_CR_8HZ</ref>()</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>config_data<sp/>|=<sp/>((uint16_t)TMP102_CONFIG_CR(3));<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,<sp/>config_data,<sp/>0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239" refid="tmp102__sensor_8h_1a98961eafa743b9a651a3cd2f3787f858" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a98961eafa743b9a651a3cd2f3787f858" kindref="member">TMP102_readMode_ALERT</ref>(uint8_t<sp/>*al_bit)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>config_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>already<sp/>configured<sp/>values<sp/>in<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_CONFIGURATION,(uint8_t*)&amp;config_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(config_data));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>*al_bit<sp/>=<sp/>(config_data<sp/>&amp;<sp/>((uint16_t)TMP102_CONFIG_AL))&gt;&gt;13;<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="tmp102__sensor_8h_1a6296f70167b1f662c7f9b56b15fe037c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a6296f70167b1f662c7f9b56b15fe037c" kindref="member">TMP102_write_Tlow</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tlow_C)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tlow_C<sp/>&lt;<sp/>-56.0f<sp/>||<sp/>tlow_C<sp/>&gt;<sp/>151.0f)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlow_C<sp/>=<sp/>75.0f;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>tlow_C<sp/>/=<sp/>0.0625;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>tl;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tlow_C<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl<sp/>=<sp/>((uint16_t)tlow_C<sp/>&lt;&lt;<sp/>4);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl<sp/>&amp;=<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlow_C<sp/>=<sp/>-1<sp/>*<sp/>tlow_C;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl<sp/>=<sp/>(uint16_t)tlow_C;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl<sp/>=<sp/>~(tl)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tl<sp/>=<sp/>tl<sp/>&lt;&lt;<sp/>4;<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_TLOW,<sp/>tl,<sp/>0);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>TEST_I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>retTlow<sp/>=0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_TLOW,(uint8_t*)&amp;retTlow,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(retTlow));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(retTlow<sp/>==<sp/>tl);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(retTlow,tl);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="tmp102__sensor_8h_1a32a4b8bbc5611a7ca967cdaaeb732ae1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a32a4b8bbc5611a7ca967cdaaeb732ae1" kindref="member">TMP102_write_Thigh</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>thigh_C)</highlight></codeline>
<codeline lineno="291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thigh_C<sp/>&lt;<sp/>-56.0f<sp/>||<sp/>thigh_C<sp/>&gt;<sp/>151.0f)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thigh_C<sp/>=<sp/>80.0f;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>thigh_C<sp/>/=<sp/>0.0625;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>th;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thigh_C<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>((uint16_t)thigh_C<sp/>&lt;&lt;<sp/>4);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>&amp;=<sp/>0x7FFF;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thigh_C<sp/>=<sp/>-1<sp/>*<sp/>thigh_C;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>(uint16_t)thigh_C;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>~(th)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>th<sp/>&lt;&lt;<sp/>4;<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a19c6244da5ea2d4e65a25001582498c8" kindref="member">I2Cmaster_write_word</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_TLOW,<sp/>th,<sp/>0);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>TEST_I2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>ret<sp/>=0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_TLOW,(uint8_t*)&amp;ret,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ret));</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ret<sp/>==<sp/>th);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_true(ret<sp/>==<sp/>th);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="tmp102__sensor_8h_1aa8531a04dcf776f0d81d190b384bfab5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1aa8531a04dcf776f0d81d190b384bfab5" kindref="member">TMP102_read_Tlow</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*tlow_C)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>tlow<sp/>=0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_TLOW,(uint8_t*)&amp;tlow,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ret));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tlow<sp/>&amp;<sp/>0x800)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tlow<sp/>=<sp/>(~tlow)<sp/>+<sp/>1;<sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tlow_C<sp/>=<sp/>(-1)<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)tlow<sp/>*<sp/>0.0625;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tlow_C<sp/>=<sp/>((float)tlow)*0.0625;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="tmp102__sensor_8h_1a63bbac70f6558fd10f034a45d1fa140c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a63bbac70f6558fd10f034a45d1fa140c" kindref="member">TMP102_read_Thigh</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*thigh_C)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>thigh<sp/>=0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_TLOW,(uint8_t*)&amp;thigh,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ret));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(thigh<sp/>&amp;<sp/>0x800)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thigh<sp/>=<sp/>(~thigh)<sp/>+<sp/>1;<sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*thigh_C<sp/>=<sp/>(-1)<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)thigh<sp/>*<sp/>0.0625;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*thigh_C<sp/>=<sp/>((float)thigh)*0.0625;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374" refid="tmp102__sensor_8h_1a847d6333b56e33f815bb5e1101056e42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="tmp102__sensor_8h_1a847d6333b56e33f815bb5e1101056e42" kindref="member">TMP102_getTemp</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*temp,<sp/>TEMPERATURE_UNIT_T<sp/>unit)</highlight></codeline>
<codeline lineno="375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buff[2]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>TMP102_REG_TEMPERATURE,<sp/>buff,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buff));</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>get<sp/>MSB(15:8)<sp/>in<sp/>buff[0]<sp/>and<sp/>LSB(7:4)<sp/>in<sp/>buff[1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>temp_raw<sp/>=<sp/>(buff[0]<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(buff[1]<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(temp_raw<sp/>&amp;<sp/>0x800)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_raw<sp/>=<sp/>(~temp_raw)<sp/>+<sp/>1;<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*temp<sp/>=<sp/>(-1)<sp/>*<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)temp_raw<sp/>*<sp/>0.0625;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*temp<sp/>=<sp/>((float)temp_raw)*0.0625;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unit<sp/>==<sp/>FAHREN)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*temp<sp/>=<sp/>(*temp<sp/>*<sp/>1.8)<sp/>+<sp/>32;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(unit<sp/>==<sp/>KELVIN)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*temp<sp/>+=<sp/>273.15;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="tmp102__sensor_8h_1a1ea9cb5a6a2e798b33564f9142d7afa1" refkind="member"><highlight class="normal">uint16_t*<sp/><ref refid="tmp102__sensor_8h_1a1ea9cb5a6a2e798b33564f9142d7afa1" kindref="member">TMP102_memDump</ref>()</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>*memdump<sp/>=<sp/>(uint16_t*)malloc(4*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>memdump)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(memdump,<sp/>0<sp/>,<sp/>4);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint8_t<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>0x4;<sp/>i++)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1ab25650a9cf74e65561b1fced3555f36c" kindref="member">I2Cmaster_read_bytes</ref>(TMP102_SLAVE_ADDR,<sp/>i<sp/>,<sp/>(uint8_t*)(memdump+i),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memdump[i]<sp/>=<sp/>(memdump[i]&lt;&lt;8)<sp/>|<sp/>(memdump[i]&gt;&gt;8);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>temp<sp/>=<sp/>(float)(memdump[i]&gt;&gt;4)<sp/>*<sp/>0.0625;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/>-<sp/>F:%.02f<sp/>-<sp/>&quot;,temp);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>memdump;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/gunj/repos/ECEN-5013/Project1/src/tmp102_sensor.c"/>
  </compounddef>
</doxygen>
