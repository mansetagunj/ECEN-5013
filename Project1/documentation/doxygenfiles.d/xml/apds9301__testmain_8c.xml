<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="apds9301__testmain_8c" kind="file" language="C++">
    <compoundname>apds9301_testmain.c</compoundname>
    <includes refid="my__i2c_8h" local="yes">my_i2c.h</includes>
    <includes refid="apds9301__sensor_8h" local="yes">apds9301_sensor.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="yes">cmocka.h</includes>
    <incdepgraph>
      <node id="973">
        <label>my_i2c.h</label>
        <link refid="my__i2c_8h"/>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
      </node>
      <node id="977">
        <label>stdint.h</label>
      </node>
      <node id="975">
        <label>mraa/i2c.h</label>
      </node>
      <node id="974">
        <label>pthread.h</label>
      </node>
      <node id="978">
        <label>unistd.h</label>
      </node>
      <node id="976">
        <label>apds9301_sensor.h</label>
        <link refid="apds9301__sensor_8h"/>
        <childnode refid="977" relation="include">
        </childnode>
      </node>
      <node id="979">
        <label>cmocka.h</label>
      </node>
      <node id="972">
        <label>/home/gunj/repos/ECEN-5013/Project1/tests/LightLIB_Test/apds9301_testmain.c</label>
        <link refid="apds9301_testmain.c"/>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="978" relation="include">
        </childnode>
        <childnode refid="979" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="apds9301__testmain_8c_1a650255c97da0e722bc7439920a22c863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void testAPDS9301</definition>
        <argsstring>(void **state)</argsstring>
        <name>testAPDS9301</name>
        <param>
          <type>void **</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/tests/LightLIB_Test/apds9301_testmain.c" line="14" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/tests/LightLIB_Test/apds9301_testmain.c" bodystart="14" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="apds9301__testmain_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/tests/LightLIB_Test/apds9301_testmain.c" line="123" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/tests/LightLIB_Test/apds9301_testmain.c" bodystart="123" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Test for the APDS9301 sensor. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Gunj Manseta </para></simplesect>
<simplesect kind="date"><para>2018-03-14 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="my__i2c_8h" kindref="compound">my_i2c.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="apds9301__sensor_8h" kindref="compound">apds9301_sensor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cmocka.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>testAPDS9301(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**state)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structi2c__handle" kindref="compound">I2C_MASTER_HANDLE_T</ref><sp/>i2c;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1acea2b6a0875bf63a179959a46b3cdf7d" kindref="member">I2Cmaster_Init</ref>(&amp;i2c);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="my__i2c_8c_1a896771a0a066b06b606d35bb81809fa0" kindref="member">getMasterI2C_handle</ref>());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_ptr_equal(&amp;i2c,<ref refid="my__i2c_8c_1a896771a0a066b06b606d35bb81809fa0" kindref="member">getMasterI2C_handle</ref>());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1a5f0928561f20743cccb1a4f6336ddff4" kindref="member">APDS9301_poweron</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1a29ea2301a68de775fc0281dd1b4b03aa" kindref="member">APDS9301_test</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/><sp/>=<sp/><ref refid="apds9301__sensor_8c_1a2aa3244d3848324ba9f4afc7b1990ce1" kindref="member">APDS9301_readControlReg</ref>(&amp;data);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal((data<sp/>&amp;<sp/>0x3),<sp/>0x03);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>tlow<sp/>=<sp/>0xBB11;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1a27508ac9add1cd27cb2c143631f3a55f" kindref="member">APDS9301_write_ThLow</ref>(tlow);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>tlow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1ad0dcd5037cad9e4ed654da7d9d548010" kindref="member">APDS9301_read_ThLow</ref>(&amp;tlow);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(tlow,<sp/>0xBB11);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>thigh<sp/>=<sp/>0xA5A5;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1ad75b8b8d703f549994213adeaea90c64" kindref="member">APDS9301_write_ThHigh</ref>(thigh);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>thigh<sp/>=<sp/>0<sp/>;<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1ab7d8d5ac5b780bcdb0a399f286b7f224" kindref="member">APDS9301_read_ThHigh</ref>(&amp;thigh);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(thigh,<sp/>0xA5A5);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1a5e527c870fed599e87d712a151e47172" kindref="member">APDS9301_mode_highGain</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>APDS9301_mode_integrationTime3();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>APDS9301_mode_interruptEnable();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>APDS9301_mode_manualcontrolON();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*memdump<sp/>=<sp/><ref refid="apds9301__sensor_8c_1acae5d5b1cfb4008743589e5482d7578b" kindref="member">APDS9301_memDump</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_non_null(memdump);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Power<sp/>up<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(memdump[0]<sp/>&amp;<sp/>0x3,<sp/>0x3);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Timing<sp/>register<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(memdump[1]<sp/>&amp;<sp/>0x1B,<sp/>0x1B);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Interrupt<sp/>control<sp/>reg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(memdump[6]<sp/>&amp;<sp/>0x3F,<sp/>0x10);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>free(memdump);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret<sp/>=<sp/>APDS9301_mode_lowGain_default();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert_int_equal(ret,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret<sp/>=<sp/>APDS9301_mode_integrationTime2_default();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert_int_equal(ret,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret<sp/>=<sp/>APDS9301_mode_interruptDisable_default();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert_int_equal(ret,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ret<sp/>=<sp/>APDS9301_mode_manualcontrolOFF_default();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assert_int_equal(ret,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1a47621b827697481f12f3bf6257118f70" kindref="member">APDS9301__setmode_allDefault</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1a82dac2bc9fc0e11fc4589f3492bec13e" kindref="member">APDS9301_readID</ref>(&amp;data);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(data&amp;0xF0,<sp/>0x50);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i&lt;2)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lux<sp/>=<sp/><ref refid="apds9301__sensor_8c_1a55e164e7dd0586de71a8dd5b25ae9ef3" kindref="member">APDS9301_getLux</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert_int_not_equal(lux,<sp/>-1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert_in_range(lux,0,100);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1a2ddb9f93c9fac9cb3fbe152bda7bc43b" kindref="member">APDS9301_powerdown</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="apds9301__sensor_8c_1a2aa3244d3848324ba9f4afc7b1990ce1" kindref="member">APDS9301_readControlReg</ref>(&amp;data);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal((data<sp/>&amp;<sp/>0x3),<sp/>0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="my__i2c_8c_1a15136dcc397f046d0a000a781d060139" kindref="member">I2Cmaster_Destroy</ref>(&amp;i2c);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_int_equal(ret,<sp/>0);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>assert_null((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<ref refid="my__i2c_8c_1a896771a0a066b06b606d35bb81809fa0" kindref="member">getMasterI2C_handle</ref>());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CMUnitTest<sp/>tests[]<sp/>=<sp/>{<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>cmocka_unit_test(testAPDS9301)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cmocka_run_group_tests(tests,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/gunj/repos/ECEN-5013/Project1/tests/LightLIB_Test/apds9301_testmain.c"/>
  </compounddef>
</doxygen>
