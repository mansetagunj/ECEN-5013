<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="readConfiguration_8c" kind="file" language="C++">
    <compoundname>readConfiguration.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="readConfiguration_8h" local="yes">readConfiguration.h</includes>
    <incdepgraph>
      <node id="890">
        <label>stdint.h</label>
      </node>
      <node id="889">
        <label>stdlib.h</label>
      </node>
      <node id="887">
        <label>/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c</label>
        <link refid="readConfiguration.c"/>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="888">
        <label>string.h</label>
      </node>
      <node id="892">
        <label>readConfiguration.h</label>
        <link refid="readConfiguration_8h"/>
      </node>
      <node id="891">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="readConfiguration_8c_1a3f80a7daa371c71a6f33711232b81c2f" prot="public" static="no">
        <name>CONFIG_DATA_NUM</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" line="17" column="9" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="readConfiguration_8c_1a42bf63540ee0039a3a23db1b5ec3202b" prot="public" static="no">
        <name>CONFIG_FILE</name>
        <initializer>&quot;configuration.dat&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" line="19" column="9" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="readConfiguration_8c_1a06f7ce9926ad9d6882a0bafa594045dd" prot="public" static="no">
        <name>CONFIG_DATA_INDEX</name>
        <enumvalue id="readConfiguration_8c_1a06f7ce9926ad9d6882a0bafa594045ddab71933ce85bfb37e043c05f11b2b3fa2" prot="public">
          <name>LOG_PATH_STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="readConfiguration_8c_1a06f7ce9926ad9d6882a0bafa594045dda77c3d85f6de8ca914d2a54e7d7d7616f" prot="public">
          <name>TASK_SETUP_TIME_SEC_UINT8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="readConfiguration_8c_1a06f7ce9926ad9d6882a0bafa594045dda1f1c38230f57131960b3f87c749cf67c" prot="public">
          <name>TASK_ALIVE_TIMEOUT_SEC_UINT8</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" line="22" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" bodystart="21" bodyend="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="readConfiguration_8c_1ad703769c8b2995d60a41aa6cc99d7c2e" prot="public" static="yes" mutable="no">
        <type>void *</type>
        <definition>void* configurationData[CONFIG_DATA_NUM]</definition>
        <argsstring>[CONFIG_DATA_NUM]</argsstring>
        <name>configurationData</name>
        <initializer>= {0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" line="28" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="readConfiguration_8c_1a6ec4251859d1107c4a9f457ff5ead99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* configdata_getLogpath</definition>
        <argsstring>()</argsstring>
        <name>configdata_getLogpath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>char* </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" line="30" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" bodystart="30" bodyend="33"/>
        <referencedby refid="logger__task_8h_1a7322e57eb5c8763112ad4d4a946601bf" compoundref="logger__task_8c" startline="143" endline="190">logger_task_callback</referencedby>
        <referencedby refid="readConfiguration_8h_1a93341cc941d5255d844aea3b49cdfc9e" compoundref="readConfiguration_8c" startline="66" endline="73">configdata_flush</referencedby>
      </memberdef>
      <memberdef kind="function" id="readConfiguration_8c_1a622fe97941be32a0343567a4cfbd24e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t configdata_getSetupTime</definition>
        <argsstring>()</argsstring>
        <name>configdata_getSetupTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" line="35" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" bodystart="35" bodyend="38"/>
        <referencedby refid="readConfiguration_8h_1a93341cc941d5255d844aea3b49cdfc9e" compoundref="readConfiguration_8c" startline="66" endline="73">configdata_flush</referencedby>
      </memberdef>
      <memberdef kind="function" id="readConfiguration_8c_1a3936001fcb10cb50f534070c1e0d3058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t configdata_getAliveTimeout</definition>
        <argsstring>()</argsstring>
        <name>configdata_getAliveTimeout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint32_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" line="39" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" bodystart="39" bodyend="42"/>
        <referencedby refid="readConfiguration_8h_1a93341cc941d5255d844aea3b49cdfc9e" compoundref="readConfiguration_8c" startline="66" endline="73">configdata_flush</referencedby>
      </memberdef>
      <memberdef kind="function" id="readConfiguration_8c_1af04c65a7de574da1abe2b9bd0f403c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int configdata_setup</definition>
        <argsstring>()</argsstring>
        <name>configdata_setup</name>
        <briefdescription>
<para>Should be called in the main task at the beginning. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" line="44" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" bodystart="44" bodyend="64"/>
        <referencedby refid="main__task_8h_1a52c4c165f42a1ca113ba4bd55b00a293" compoundref="main__task_8c" startline="210" endline="309">main_task_entry</referencedby>
        <referencedby refid="readConfiguration_8h_1a93341cc941d5255d844aea3b49cdfc9e" compoundref="readConfiguration_8c" startline="66" endline="73">configdata_flush</referencedby>
      </memberdef>
      <memberdef kind="function" id="readConfiguration_8c_1a93341cc941d5255d844aea3b49cdfc9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void configdata_flush</definition>
        <argsstring>()</argsstring>
        <name>configdata_flush</name>
        <briefdescription>
<para>Should be called at teh end of main task. If not called, memory leak will occur. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" line="66" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c" bodystart="66" bodyend="73"/>
        <referencedby refid="main__task_8h_1a52c4c165f42a1ca113ba4bd55b00a293" compoundref="main__task_8c" startline="210" endline="309">main_task_entry</referencedby>
        <referencedby refid="readConfiguration_8h_1a93341cc941d5255d844aea3b49cdfc9e" compoundref="readConfiguration_8c" startline="66" endline="73">configdata_flush</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Gunj Manseta </para></simplesect>
<simplesect kind="date"><para>2018-03-17 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="10"><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="readConfiguration_8h" kindref="compound">readConfiguration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONFIG_DATA_NUM<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONFIG_FILE<sp/>&quot;configuration.dat&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>LOG_PATH_STRING,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_SETUP_TIME_SEC_UINT8,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>TASK_ALIVE_TIMEOUT_SEC_UINT8</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}CONFIG_DATA_INDEX;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>configurationData[CONFIG_DATA_NUM]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="readConfiguration_8h_1a6ec4251859d1107c4a9f457ff5ead99c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="readConfiguration_8c_1a6ec4251859d1107c4a9f457ff5ead99c" kindref="member">configdata_getLogpath</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)configurationData[LOG_PATH_STRING]);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="readConfiguration_8h_1a622fe97941be32a0343567a4cfbd24e7" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="readConfiguration_8c_1a622fe97941be32a0343567a4cfbd24e7" kindref="member">configdata_getSetupTime</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*((uint32_t*)configurationData[TASK_SETUP_TIME_SEC_UINT8]));</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39" refid="readConfiguration_8h_1a3936001fcb10cb50f534070c1e0d3058" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="readConfiguration_8c_1a3936001fcb10cb50f534070c1e0d3058" kindref="member">configdata_getAliveTimeout</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*((uint32_t*)configurationData[TASK_ALIVE_TIMEOUT_SEC_UINT8]));</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="readConfiguration_8h_1af04c65a7de574da1abe2b9bd0f403c64" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="readConfiguration_8c_1af04c65a7de574da1abe2b9bd0f403c64" kindref="member">configdata_setup</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(CONFIG_FILE,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==fp)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>configurationData[LOG_PATH_STRING]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)*20);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>configurationData[TASK_SETUP_TIME_SEC_UINT8]<sp/>=<sp/>(uint32_t*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>configurationData[TASK_ALIVE_TIMEOUT_SEC_UINT8]<sp/>=<sp/>(uint32_t*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t));</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>readBytes<sp/>=<sp/>fscanf(fp,</highlight><highlight class="stringliteral">&quot;%s<sp/>%u<sp/>%u&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)configurationData[LOG_PATH_STRING],(uint32_t*)configurationData[TASK_SETUP_TIME_SEC_UINT8],<sp/>(uint32_t*)configurationData[TASK_ALIVE_TIMEOUT_SEC_UINT8]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>SELF_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PATH:<sp/>%s\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)configurationData[LOG_PATH_STRING]);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;SETUP:<sp/>%u\n&quot;</highlight><highlight class="normal">,*(uint32_t*)configurationData[TASK_SETUP_TIME_SEC_UINT8]);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TO:<sp/>%u\n&quot;</highlight><highlight class="normal">,*(uint32_t*)configurationData[TASK_ALIVE_TIMEOUT_SEC_UINT8]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="readConfiguration_8h_1a93341cc941d5255d844aea3b49cdfc9e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="readConfiguration_8c_1a93341cc941d5255d844aea3b49cdfc9e" kindref="member">configdata_flush</ref>()</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;CONFIG_DATA_NUM<sp/>;<sp/>i<sp/>++)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(configurationData[i]);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>configurationData[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SELF_TEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/><ref refid="readConfiguration_8c_1af04c65a7de574da1abe2b9bd0f403c64" kindref="member">configdata_setup</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;From<sp/>func:<sp/>%s\n&quot;</highlight><highlight class="normal">,<ref refid="readConfiguration_8c_1a6ec4251859d1107c4a9f457ff5ead99c" kindref="member">configdata_getLogpath</ref>());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;From<sp/>func:<sp/>%u\n&quot;</highlight><highlight class="normal">,<ref refid="readConfiguration_8c_1a622fe97941be32a0343567a4cfbd24e7" kindref="member">configdata_getSetupTime</ref>());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;From<sp/>func:<sp/>%u\n&quot;</highlight><highlight class="normal">,<ref refid="readConfiguration_8c_1a3936001fcb10cb50f534070c1e0d3058" kindref="member">configdata_getAliveTimeout</ref>());</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="readConfiguration_8c_1a93341cc941d5255d844aea3b49cdfc9e" kindref="member">configdata_flush</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/gunj/repos/ECEN-5013/Project1/src/readConfiguration.c"/>
  </compounddef>
</doxygen>
