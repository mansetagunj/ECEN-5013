<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="BB__Led_8c" kind="file" language="C++">
    <compoundname>BB_Led.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="BB__Led_8h" local="yes">BB_Led.h</includes>
    <incdepgraph>
      <node id="719">
        <label>BB_Led.h</label>
        <link refid="BB__Led_8h"/>
      </node>
      <node id="717">
        <label>stdlib.h</label>
      </node>
      <node id="716">
        <label>/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c</label>
        <link refid="BB_Led.c"/>
        <childnode refid="717" relation="include">
        </childnode>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
      </node>
      <node id="718">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="BB__Led_8c_1ad76d1750a6cdeebd506bfcd6752554d2" prot="public" static="no">
        <name>ON</name>
        <initializer>&quot;1&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" line="14" column="9" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="BB__Led_8c_1a29e413f6725b2ba32d165ffaa35b01e5" prot="public" static="no">
        <name>OFF</name>
        <initializer>&quot;0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" line="15" column="9" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="BB__Led_8c_1ad698e2cb680601529f08c3e5f2b0cebb" prot="public" static="no">
        <name>LED_COUNT</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" line="18" column="9" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="BB__Led_8c_1ab3370ee5a3985cd9ca2f38fab2f27114" prot="public" static="no" mutable="no">
        <type>const char *const</type>
        <definition>const char* const LEDPATH[LED_COUNT]</definition>
        <argsstring>[LED_COUNT]</argsstring>
        <name>LEDPATH</name>
        <initializer>=
{
    &quot;/sys/class/leds/beaglebone:green:usr0/brightness&quot;,
    &quot;/sys/class/leds/beaglebone:green:usr1/brightness&quot;,
    &quot;/sys/class/leds/beaglebone:green:usr2/brightness&quot;,
    &quot;/sys/class/leds/beaglebone:green:usr3/brightness&quot;
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" line="19" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="BB__Led_8c_1a86628a099822bb243b1c7d57133e627b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BB_LedON</definition>
        <argsstring>(USER_LED_T lednum)</argsstring>
        <name>BB_LedON</name>
        <param>
          <type>USER_LED_T</type>
          <declname>lednum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lednum</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" line="27" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" bodystart="27" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="BB__Led_8c_1a84494234e8807c093bee8d16d7b2008b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BB_LedOFF</definition>
        <argsstring>(USER_LED_T lednum)</argsstring>
        <name>BB_LedOFF</name>
        <param>
          <type>USER_LED_T</type>
          <declname>lednum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lednum</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" line="48" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" bodystart="48" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="BB__Led_8c_1a36a765a1771de0098fe83028d53827e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BB_LedDefault</definition>
        <argsstring>()</argsstring>
        <name>BB_LedDefault</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lednum</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" line="69" column="1" bodyfile="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c" bodystart="69" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Gunj Manseta </para></simplesect>
<simplesect kind="date"><para>2018-03-10 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="BB__Led_8h" kindref="compound">BB_Led.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ON<sp/>&quot;1&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OFF<sp/>&quot;0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LED_COUNT<sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LEDPATH[LED_COUNT]<sp/>=</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/sys/class/leds/beaglebone:green:usr0/brightness&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/sys/class/leds/beaglebone:green:usr1/brightness&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/sys/class/leds/beaglebone:green:usr2/brightness&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/sys/class/leds/beaglebone:green:usr3/brightness&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="BB__Led_8h_1a86628a099822bb243b1c7d57133e627b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="BB__Led_8c_1a86628a099822bb243b1c7d57133e627b" kindref="member">BB_LedON</ref>(USER_LED_T<sp/>lednum)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Forcefully<sp/>using<sp/>USR<sp/>LED<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>lednum<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lednum<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*led_fd<sp/>=<sp/>fopen(LEDPATH[lednum],<sp/></highlight><highlight class="stringliteral">&quot;r+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(led_fd)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(ON,1,1,led_fd);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(led_fd);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="BB__Led_8h_1a84494234e8807c093bee8d16d7b2008b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="BB__Led_8c_1a84494234e8807c093bee8d16d7b2008b" kindref="member">BB_LedOFF</ref>(USER_LED_T<sp/>lednum)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Forcefully<sp/>using<sp/>USR<sp/>LED<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>lednum<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lednum<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*led_fd<sp/>=<sp/>fopen(LEDPATH[lednum],<sp/></highlight><highlight class="stringliteral">&quot;r+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(led_fd)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(OFF,1,1,led_fd);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(led_fd);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="BB__Led_8h_1a36a765a1771de0098fe83028d53827e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="BB__Led_8c_1a36a765a1771de0098fe83028d53827e1" kindref="member">BB_LedDefault</ref>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*led_fd<sp/>=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;/sys/class/leds/beaglebone:green:usr0/trigger&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(led_fd)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(</highlight><highlight class="stringliteral">&quot;heartbeat&quot;</highlight><highlight class="normal">,1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;heartbeat&quot;</highlight><highlight class="normal">),led_fd);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(led_fd);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/gunj/repos/ECEN-5013/Project1/src/BB_Led.c"/>
  </compounddef>
</doxygen>
